{
	"name": "cnc-mission-stringids",
	"displayName": "Cattle and Crops Mission StringIds",
	"description": "Sets new or deletes stringIds per condition, pastes strings from translation table in xml, pastes stringIds and strings from xml in translation table. ",
	"version": "0.0.7",
	"repository": {
		"type": "git",
		"url": "https://gitlab.com/cattle-and-crops/tutorial-stringids-vscode-extension.git"
	},
	"publisher": "JakobTischler",
	"icon": "images/icon.png",
	"engines": {
		"vscode": "^1.45.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:cnc-mission-stringids.cleanBackslashes",
		"onCommand:cnc-mission-stringids.createStringIds",
		"onCommand:cnc-mission-stringids.deleteStringIds",
		"onCommand:cnc-mission-stringids.getStringContents",
		"onCommand:cnc-mission-stringids.pasteStringsFromSheet"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "cnc-mission-stringids.cleanBackslashes",
				"title": "Clean Backslashes",
				"category": "Cattle and Crops"
			},
			{
				"command": "cnc-mission-stringids.createStringIds",
				"title": "Create StringIds",
				"category": "Cattle and Crops"
			},
			{
				"command": "cnc-mission-stringids.deleteStringIds",
				"title": "Delete StringIds",
				"category": "Cattle and Crops"
			},
			{
				"command": "cnc-mission-stringids.getStringContents",
				"title": "Get String Contents",
				"category": "Cattle and Crops"
			},
			{
				"command": "cnc-mission-stringids.pasteStringsFromSheet",
				"title": "Paste Strings from Sheet",
				"category": "Cattle and Crops"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "cnc-mission-stringids.cleanBackslashes",
					"group": "Cattle and Crops",
					"when": "editorHasSelection && editorLangId == xml"
				},
				{
					"command": "cnc-mission-stringids.createStringIds",
					"group": "Cattle and Crops",
					"when": "resourceExtname == .xml || editorLangId == xml"
				},
				{
					"command": "cnc-mission-stringids.deleteStringIds",
					"group": "Cattle and Crops",
					"when": "resourceExtname == .xml || editorLangId == xml"
				},
				{
					"command": "cnc-mission-stringids.getStringContents",
					"group": "Cattle and Crops",
					"when": "resourceExtname == .xml || editorLangId == xml"
				},
				{
					"command": "cnc-mission-stringids.pasteStringsFromSheet",
					"group": "Cattle and Crops",
					"when": "resourceExtname == .xml || editorLangId == xml"
				}
			],
			"editor/context": [
				{
					"command": "cnc-mission-stringids.cleanBackslashes",
					"group": "Cattle and Crops@5",
					"when": "editorHasSelection && editorLangId == xml"
				},
				{
					"command": "cnc-mission-stringids.createStringIds",
					"group": "Cattle and Crops@1",
					"when": "resourceExtname == .xml || editorLangId == xml"
				},
				{
					"command": "cnc-mission-stringids.deleteStringIds",
					"group": "Cattle and Crops@4",
					"when": "resourceExtname == .xml || editorLangId == xml"
				},
				{
					"command": "cnc-mission-stringids.getStringContents",
					"group": "Cattle and Crops@2",
					"when": "resourceExtname == .xml || editorLangId == xml"
				},
				{
					"command": "cnc-mission-stringids.pasteStringsFromSheet",
					"group": "Cattle and Crops@3",
					"when": "resourceExtname == .xml || editorLangId == xml"
				}
			]
		},
		"configuration": {
			"type": "object",
			"title": "Cattle and Crops",
			"properties": {
				"cnc-mission-stringids.getStringContent.copyStringIdsToClipboard": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Defines if the `stringIds` and text should be copied to the clipboard when reading them from the `.xml` file",
					"scope": "window"
				},
				"cnc-mission-stringids.getStringContent.pasteStringIdsInNewFile": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Defines if the `stringIds` and text should be pasted to a new empty file",
					"scope": "window"
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"lint": "eslint src --ext ts",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"test": "node ./out/test/runTest.js",
		"pack": "vsce package"
	},
	"devDependencies": {
		"@types/glob": "^7.1.1",
		"@types/mocha": "^7.0.2",
		"@types/node": "^13.13.9",
		"@types/vscode": "^1.45.0",
		"@typescript-eslint/eslint-plugin": "^2.30.0",
		"@typescript-eslint/parser": "^2.30.0",
		"eslint": "^6.8.0",
		"glob": "^7.1.6",
		"mocha": "^7.1.2",
		"typescript": "^3.9.3",
		"vscode-test": "^1.3.0"
	},
	"dependencies": {
		"fast-xml-parser": "^3.17.4"
	}
}
